@model JobEngine.Web.Areas.Clients.Models.JobEngineClientViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/_LayoutPage.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Job Engine Client</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.JobEngineClientId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username)
                @Html.ValidationMessageFor(model => model.Username)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password)
                @Html.ValidationMessageFor(model => model.Password)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsEnabled, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsEnabled)
                @Html.ValidationMessageFor(model => model.IsEnabled)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastConnected, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastConnected, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control", @style = "max-width:180px;" } })
                @Html.ValidationMessageFor(model => model.LastConnected)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateModified, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateModified, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control", @style = "max-width:180px;" } })
                @Html.ValidationMessageFor(model => model.DateModified)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModifiedBy, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ModifiedBy, new { @disabled = "disabled", @class = "form-control", @style = "max-width:180px;" } )
                @Html.ValidationMessageFor(model => model.ModifiedBy)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateCreated, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control", @style = "max-width:180px;" } })
                @Html.ValidationMessageFor(model => model.DateCreated)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
