@model JobEngine.Web.Areas.AssemblyJobs.Models.AssemblyJobViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

@section style
{
    <style type="text/css">
        .btn-file {
            position: relative;
            overflow: hidden;            
        }

            .btn-file input[type=file] {
                position: absolute;
                top: 0;
                right: 0;
                text-align: right;
                filter: alpha(opacity=0);
                opacity: 0;
                background: red;
                cursor: inherit;
                display: block;
            }

        input[readonly] {
            background-color: white !important;
            cursor: text !important;
            
        }
    </style>
}

@section scripts
{
    <script type="text/javascript">
        $(document).on('change', '.btn-file :file', function () {
            var input = $(this),
                numFiles = input.get(0).files ? input.get(0).files.length : 1,
                label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
            input.trigger('fileselect', [numFiles, label]);
        });

        $(document).ready(function () {
            $('.btn-file :file').on('fileselect', function (event, numFiles, label) {

                var input = $(this).parents('.input-group').find(':text'),
                    log = numFiles > 1 ? numFiles + ' files selected' : label;

                if (input.length) {
                    input.val(log);
                } else {
                    if (log) alert(log);
                }

            });
        });
    </script>
    }
<form action="" method="post" enctype="multipart/form-data">

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Assembly Job</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PluginName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PluginName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PluginName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.File, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    <span class="input-group-btn">
                        <span class="btn btn-default btn-file">
                            Browse… <input id="File" name="File" type="file" value="">
                        </span>
                    </span>
                    <input type="text" class="form-control" readonly="" style="max-width:215px;">
                </div>

                @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
